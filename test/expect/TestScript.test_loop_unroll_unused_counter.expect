graph(%x : Dynamic) {
  %y.1 : int = prim::Constant[value=0]()
  %2 : int = prim::TensorToNum(%x)
  %3 : int = prim::Constant[value=1]()
  %4 : int = prim::Constant[value=8]()
  %5 : int = aten::floordiv(%2, %4)
  %6 : int = prim::Constant[value=8]()
  %7 : int = aten::mul(%5, %6)
  %8 : int = aten::sub(%2, %7)
  %y.3 : int = prim::Loop(%5, %3, %y.1)
    block0(%i.1 : int, %11 : int) {
      %12 : int = prim::Constant[value=1]()
      %y.12 : int = aten::add(%11, %12)
      %14 : int = prim::Constant[value=1]()
      %y.5 : int = aten::add(%y.12, %14)
      %16 : int = prim::Constant[value=1]()
      %y.6 : int = aten::add(%y.5, %16)
      %18 : int = prim::Constant[value=1]()
      %y.7 : int = aten::add(%y.6, %18)
      %20 : int = prim::Constant[value=1]()
      %y.8 : int = aten::add(%y.7, %20)
      %22 : int = prim::Constant[value=1]()
      %y.9 : int = aten::add(%y.8, %22)
      %24 : int = prim::Constant[value=1]()
      %y.10 : int = aten::add(%y.9, %24)
      %26 : int = prim::Constant[value=1]()
      %y.11 : int = aten::add(%y.10, %26)
      %28 : int = prim::Constant[value=1]()
      -> (%28, %y.11)
    }
  %y : int = prim::Loop(%8, %3, %y.3)
    block0(%i : int, %31 : int) {
      %32 : int = prim::Constant[value=1]()
      %y.4 : int = aten::add(%31, %32)
      %34 : int = prim::Constant[value=1]()
      -> (%34, %y.4)
    }
  return (%y);
}
