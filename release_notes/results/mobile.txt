90cb1e67ff  # Fix exception message in Java Tensor
20dfae4099  # Fix the crashes for c++ not able to find java class through Jni (#30390)
ab5774547a  # Add info about transitive dependencies in case of using local aars (#30128)
e9cc4a5942  # Add @DoNotStrip to nativeNewTensor method. (#30472)
5ada5363fc  # GenericDict/List type use unshapedType() (#30428)
7b97eaeba5  # Add module level qpl logging. (#30906)
6225443009  # Expose setNumThreads to android api (#31033)
ca8cb3241a  # Expose setNumThreads to android api (#31205)
db90a5b992  # Switch to open sourced fbjni (#30175)
f7c92f60ba  # Typo in filename align with classname
065685180d  # Loading module from android asset (#30378)
58eb15f41c  # JIT Type parser for mobile (#30391)
930d0751e6  # Java Tensor hybrid, owns at::Tensor, no memcopy for java outputs. (#30501)
35b249769d  # Exclude lite interpreter Java files from OSS host build
3a19980b78  # Tensor class created from java does not call native methods
c808eed04a  # Nightly dimension, input shape in gradle (#30195)
f362cd510d  # Move prim ops from JIT registration to C10 (#30612)
492ca46e71  # Fix androidTest - exclude host tests from it
2d6a2c898c  # Support tensors with a storage offset in Java (#31584)
ecc3497172  # Update Gemfile (#32147)
de5821d291  # Torchscript print to logcat (#31456)
104b2c610b  # Tensor prep from image in native (#31426)
8c8bd79f32  # Add CI scripts for Custom Build (#32316)
aa61d1ee85  # Add a new job to support custom build (#32323)
0ac31a99be  # run code analysis against mobile interpreter (#32276)
e4f43bf7a5  # Set rpath for JNI library on Mac (#32247)
eab99ab08e  # [android] fbjni DoNotStrip annotation for oss native methods (#32567)
bc2e05a398  # Update Docs for building PyTorch for Android.
ada966b7d7  # [pytorch] avoid `thread_local std::vector<Call>` for mobile build (#32849)
820410b505  # Added upsample_neartest2d op for lite interpreter. (#32913)
5782758b54  # Add instructions and operators for new bytecode format of PyText model (#33555)
009293ec5c  # [pytorch][size] remove unused SparseCPUType from mobile build (#33517)
758ad516f3  # [Lite interpreter] Pass shared_ptr properly (#33667)
55b44f6746  # Throw an exception when method cannot be found from mobile module. (#33972)
6e70b2da62  # Fix mobile build (#33985)
5a8562a6af  # Fix mobile build (#34000)
0cf34cf672  # [pytorch][mobile] make sure mobile build work with dynamic dispatch (#34038)
3c042a6ab9  # [pytorch][mobile] support for custom mobile build with dynamic dispatch (#34055)
f097ca503d  # Add and test training in lite interpreter. (#32359)
385067ed4f  # [pytorch][cmake] improve build mobile with host toolchain (#34187)
17a5c67796  # Add support to dump unsupported ops. Add lite_interpter_load test. (#34072)
e642a65bea  # [pytorch][CI] add e2e mobile custom build jobs to CI (#34184)
89d314b5d5  # [pytorch] update mobile docker image version (#34337)
02478984d6  # Add support to dump unsupported ops. Add lite_interpter_load test. (#34278)
9a5e9d8cec  # [pytorch][mobile] change mobile build scripts to build PyTorch by default (#34203)
01edb7450f  # [Lite Trainer] Add necessary registrations for MNIST model (#33717)
70fe508c26  # [pytorch] fix BUILD_CAFFE2_MOBILE gating around caffe2/operators/experimental/c10/cpu (#34354)
7688ca631a  # Enable RTTI for mobile builds, to enable custom class via torchbind in mobile (#34368)
4167db11f7  # [pytorch][ci] add build_only flag to mobile CI jobs (#34560)
7aca9afdfb  # [pytorch] remove boilerplate setQEngine() from PyTorch mobile predictors (#34556)
12fb8148e4  # Disable ROCM when building mobile libtorch. (#34478)
2fe7fc681d  # [PT] add macro to expose caffe2 ops to PyTorch mobile (#34578)
ab76a8206f  # [JIT][mobile] Support built-in Function call in lite interpreter (#34676)
647569e546  # get rid of choco install (#30897)
0e753b2818  # Fix SIGABORT caused by double exception in PyTorchStreamReader when file not found. (#33243)
4da5569300  # Pass to remove prepacking ops. (#34319)
6e145b4614  # add irregular c10 op registration/invocation cases to test project (#30558)
bf1b4b6fef  # add torch_cpu to the static library list in TorchConfig.cmake.in (#30769)
941b42428a  # Mobile Backend: NHWC memory layout + XNNPACK integration. (#32509)
6aecfd1e80  # Mobile Backend: NHWC memory layout + XNNPACK integration. (#33722)
ccf4d69b75  # [Lite Interpreter] Enable __setstate__ (#33294)
03557a9838  # Make save_for_lite_interpreter private (#32771)
a69be8123a  # Use `gettimeofday` on iOS (#30361)
fa0424f224  # add LLVM-dev package to android docker image (#31215)
26f552a3d1  # Javadoc changes (#31956)
31b7d0873c  # Add File existence checking (#32208)
fd1a4f18ee  # [pytorch] update code analyzer build.sh to handle srcs with same name (#32525)
e8c4f5a74b  # Temporarily disable failing iOS builds
495c1df510  # [pytorch] convert code analyzer to a binary (#33102)
97bf41ca22  # Fix iOS x86_64 CI failure (#33194)
9c0625b004  # [iOS] Add watchOS support (#33318)
8294db8f15  # [iOS][CI] Remove org-member from iOS Simulator Builds (#34410)
70f3298684  # Fix SELECTED_OP_LIST file path issue (#33942)
25e4e9eb86  # [On-device Benchmark] speed_benchmark_torch switch to log latency from dataset level to row level (#34598)
adb8e26182  # Fix for handling batch size 0. (#34599)
4c30fc7238  # Integrate XNNPACK with custom class for packing weights. (#34047)
84bd71dbd4  # Enable threading for XNNPACK ops. (#34547)
528aabd373  # Fix backward compatibility check test for schemas containing (#34782)
6e47e7bf52  # [pytorch][mobile] fixed AutoGradMode/AutoNonVariableTypeMode uses for mobile callsites
