6a00191fc2  # Add RpcAgent::getWorkerInfos() (#30241)
5c6705e62c  # add default arg for init_method (#30208)
efe1859ad9  # By default ignore RRef leaks during shutdown (#30217)
1350b99de4  # Add local shutdown to process group agent (#30330)
f4e7e9039d  # Improve process_group_agent() serialization speed (#29785)
ec5e471647  # Reorganize rpc API doc and add introduction (#30491)
30d70d5378  # Make doc source format consistent in rpc/init.cpp
dd52f50fc8  # Add examples to RRef doc
1111a6b810  # Use pybind11::gil_scoped_* functions instead of AutoGIL/AutoNoGIL (#30274)
4dab29a2bd  # Fix serialization memory lifetime issue. (#30603)
f9f54201d3  # Remove deprecated fromIvalue in RRefForkData
5a484245d9  # Change test_invalid_names test to only test constructor of WorkerInfo (#30620)
fef4360536  # remove default constructor in futureInfo (#30197)
6dda241ab8  # Add RRef.__str__() API
63a1542ed2  # Adding Debug Info for RRef Context
ef95a72690  # modify test_local_shutdown_with_rpc to not be flaky (#30837)
d32aec5ad6  # Add get_metrics and get_debug_info to rpc agent (#30833)
b0cba8ceae  # Replace deprecated AT_ERROR with TORCH_CHECK to reduce warnings in rpc
5e6c3fb23b  # Add more details to explain rpc_backend_options arg in init_rpc
642469b706  # Fix examples in API doc
26c51468c5  # Fix examples in RRef API doc
a38c9b1ade  # Adding debugging metrics to process group agent
e9ca13d7f5  # Add glue code to collect debug info from all components
fa6661422f  # Disable flaky test_rref_context_debug_info
e7e6d56b77  # Allow async work in rpc RequestCallback processing. (#30637)
a53b39f09d  # Disable flaky test_process_group_debug_info
dbc8b00816  # Document WorkerInfo and RpcBackendOptions structures in RPC docs. (#31077)
4b2d356ac1  # Re-enable test_rref_context_debug_info after enforcing proper synchronization (#30994)
06d874f95b  # Change startTime_ to endTime_ in FutureInfo (#30342)
73f9e81660  # Make rref fetch calls async. (#31086)
a3ed350eb2  # Change type of timeoutFutures_ key to time_point instead of duration (#31078)
2488231fe3  # Tweak pollTimedOutRPCs thread synchronization (#30355)
a38184dbab  # Only create OwnerRRefs when processing remote calls (#31163)
20a2e526ef  # build a generic future<T> (#29579)
b64baa963f  # Robustify rpc_agent handlers with generic Future<T> (#31224)
ec92711aac  # Fix error message in incorrect rref.localValue() call (#31199)
643ca5def2  # Replace c10::guts::stuff with std::stuff (#30915)
359c39b3c2  # Use global lock instead of per instance lock. (#31404)
dff7b945bf  # Avoid sending large unneeded data over wire in process_group_agent. (#31357)
348d42114e  # Kill MessageType::SHUTDOWN related logic in pg agent (#31270)
fe76af96ed  # fix test_process_group_debug_info flaky test (#31533)
e8e47c0a1b  # Split RRef class into abstract RRef and RRefBase (#28942)
39297bfe08  # Fix flaky test_debug_info. (#31675)
1499b894c4  # Apply clang-format to csrc/distributed/rpc
f39105b68f  # add num_pending_users to debug info (#31539)
457c57d9f7  # use unordered_set instead of vector for futureTimeouts key in (#31813)
c829c6f3d2  # Disable flaky test_debug_info
502533cfe6  # Implement backend-agnostic rpc._wait_all_workers() utility (#30710)
bf8e1c0710  # Integrate async mode for autograd engine with distributed autograd. (#31508)
a730920a3d  # Make RRef leak detection always print a warning log (#31922)
6664703842  # Implement backend-agnostic rpc._wait_all_workers() utility (#31888)
62f93443e5  # Explain RPC behavior when using Tensor as arg or return value
8ea49e7a08  # add missing braces for format in rpc _to_worker_info (#31969)
c5af0afdcb  # catch exceptions in ProcessGroupAgent::enqueueSend and report them. (#31023)
927c2a02b0  # enable autograd profiler to work with RPC and RRef. (#31381)
dbd737158b  # support torch script call over rpc (#30063)
02f09a1bbd  # Implement backend-agnostic rpc._wait_all_workers() utility (#32190)
58234c0254  # support torch script call over rpc (#32197)
9ce25cce91  # add an option to record time spent waiting for GIL (#30842)
f050b16dd9  # Move pytorch distributed tests to separate folder for contbuild. (#30445)
b474c351dd  # [rpc] Remove template on RRef and add Type to RRef creation (#30630)
573a30270c  # [pytorch] Minor: boilerplate to propagate errors in request_callback_impl (#32556)
6ad9e5c70d  # Support TorchScript call over remote API (RRef) (#32466)
5b321a0985  # [rpc] make handling of FORWARD_AUTOGRAD_REQ in request_callback_impl (#32476)
1695915371  # Make _wait_all_workers() support being called for multiple times (#32624)
5c8535d5b0  # Make C++ RpcAgent::currentRPCAgent_ the source of truth of current RPC Agent (#32633)
b9f764b1c7  # Use the C++ current RpcAgent pointer to eliminate the unnecessary argument passing from Python world (#32635)
6e7e595c1d  # [rpc][easy] remove redundant test in rpc_test.py (#32588)
9de3208449  # [rpc][flaky-tests] fix for test_handle_send_exceptions and (#32656)
cbb744f00f  # apply linter to rpc test files (#32659)
b5d8982ae2  # clean up GIL usuage (#32748)
821b6aa769  # [pytorch] Minor: avoid acquiring GIL twice in PyRRef::localValue() (#32785)
b0923acb29  # Reduce RPC branches for Python/BuiltinOp/TorchScript (#32689)
a40a19ccab  # Remove GIL from RRefContext (#32807)
12bcfa7c77  # Remove Python dependency (toPyTuple/fromPyTuple, jitCompilationUnit, deserialize) in rref_impl.h/cpp (#32753)
ad78c0f4fc  # Fixed the flaky test_rref_context_debug_info (#32749)
144eb59756  # [rpc] don't crash callee when function does not exist on it, instead return Exception (#32726)
a751ddaaa5  # Use leaky singletons for torch.distributed. (#32923)
bda874b480  # [rpc] throw correct Exception on local client based on the RemoteException (#32936)
05d18ffaf5  # Distributed Autograd: Allow multiple backward passes to accumulate gradients. (#32506)
d613bd0522  # [rpc][easy] move unnecessary python call directly to pybind (#33174)
eb9b4b1f29  # handle errors in ProcessGroupAgent::listenLoop(). (#32957)
9ae4d38a21  # [rpc] Switch RRef to be managed by intrusive_ptr (#33189)
93179b1c1c  # [jit] Initial use RRef in TorchScript (#33190)
92b67c03e4  # [RPC Reliability] Implemented retries for RPCs with exponential backoff (#32602)
df47a3abe0  # [distributed] pass in timeout to TCP store when initializing (#33325)
e9ac92a242  # Make RPC message constructor actually move (#33440)
507f963aa6  # [RPC Reliability] Enabled retries for RPCs with exponential backoff (#33365)
6cb9e6b015  # Back out "Revert D19871946: [distributed] pass in timeout to TCP store when initializing" (#33434)
01e1de8220  # allow remote torchscript call to itself (#32990)
9266bde970  # [pytorch] Minor: add GIL assert to PythonRpcHandler::handleExceptionGILHeld (#33557)
4d9b649261  # jit pickling rref (#32959)
a1862468d0  # Add missing test launchers for JitRpcTest and JitDistAutogradTest (#32891)
2448c97a53  # [jit] infer RRef type as container type (#33369)
d494986171  # [jit] make RRef type annotation available in Python (#33526)
4dad00b64b  # [rpc] special case tensor type check when getting RRef (#33582)
24dd800e6a  # [Dist Autograd] Functional API for Dist Autograd and Dist Optimizer (#33711)
421e3e9a54  # Release GIL for RPC pybind functions. (#33610)
dbe850af5b  # [jit] do the code reorg (#33851)
5029ff001b  # [Revert] manual revert of D19918320 (#33920)
64aab3260a  # [jit] allow RRef local creation with IValue objects (#33263)
ace2b4f37f  # [resubmit] try to infer rref type from python (#33992)
15caf3b516  # move test helper functions out of test funciton (#33960)
0afee0c20b  # [rpc][metrics] add initial metric handler classes. (#33153)
f1085a8e41  # Improve ProcessGroup RpcBackendOptions Constructor API (#34081)
3af0dffe84  # Use double quotes in C++ to stay consistent with Python RPC docs (#34095)
7da24b36b1  # Apply clang-format to RPC files (#34139)
7d01888a75  # [JIT] Register rpc.rpc_async(..) as a JIT operator (#33329)
78b81dad83  # [Dist Autograd][Better Engineering] Enhanced Error Reporting in Dist Autograd/RPC (#34179)
c62de4286e  # Add test to verify dist_autograd doesn't populate .grad field. (#33949)
f4da78f1b3  # Remove RPC TorchScript private API (#33978)
17ceb6941f  # [RPC] Create local RRef<ModuleInterface> remotely in Python, use it remotely in TorchScript (#34183)
60e8615a6d  # [JIT] Virtualize Function (#33921)
7d9f611b64  # Add worker_name helper to dist_utils. (#34162)
15a7b9cf0a  # [RpcAgent] Metrics for current num active/async rpc calls. (#34398)
3b661eb84c  # Avoid copy contents in SerializedPyObj (#34490)
6d1c4df660  # Consolidate Python Messages to use SerializedPyObj (#34491)
18ef09f5ac  # Remove _load_return_value from RPC internal.py (#34492)
544fb64440  # Use SerializedPyObj in PythonRpcHandler (#34493)
b82658810e  # Split deserialize from _run_function in RPC internal.py (#34494)
b9c32209db  # Use SerializedPyObj in PythonRpcHandler::generatePythonUDFResult (#34495)
d30fa4837e  # Unify gradient accumulation between distributed autograd and local autograd (#33214)
b185359fb4  # Avoid clone for sparse tensors during accumulation of grads. (#33427)
8d84c5f1c7  # Fix static data initialization deadlock on GIL (#34505)
2ce9513b0c  # AccumulateGrad: ensure sparse tensor indices and values refcount is always 1 (#34559)
c235be42dd  # [jit] kill script namespace (#34515)
4e07c35679  # Delete all user forks tracked in RRefContext before graceful shutting down (#31893)
fff6fe83a7  # [pytorch-rpc] WireSerializer should check has_storage() (#34626)
673d56c838  # Use c10::str in process_group_agent.cpp (#34679)
f9aa0c870f  # Use c10::str in py_rref.cpp (#34681)
ad4bc8c9b8  # Best-effort Error Detection for Using Deleted UserRRefs (#34673)
f933fa3613  # [docs][1.5] update RPC docs to reflect correct use of dist_autograd backwards and dist_optim step() (#34670)
c371c3aba7  # [rpc][profiler] add a test case to verify record_function context manager works (#34511)
f058c03b15  # Disallow sending CUDA tensors over RPC for current RPC agents. (#33604)
38b2856c71  # Split deserialize from runPythonUdf and remove generatePythonUDFResult (#34496)
d876fef743  # Fix send count for local RPC (#34809)
422e348619  # Don't run user function until all UserRRefs in the args are confirmed (#34497)
89cbc0edea  # fix tests that could have racy script module instantiation (#34792)
ecd7c0f84c  # [RPC] Use qualified name str directly in RPC torch script code path (#34733)
71f02a481b  # [RPC] Avoid polluting Python root logger on importing "torch" module (#34871)
0d857d55b9  # Add a warning for RRef serialization (#34884)
6446ccce76  # Adding warnings for async Tensor serialization in remote and rpc_async (#34885)
800bdcf000  # Removing experimental tag in for RPC and adding experimental tag for RPC+TorchScript (#34887)
3c48aadd98  # Update descriptions for transmitting CUDA tensors (#34888)
552f9d3a68  # Minor fixes for RPC API docs (#34890)
f05abd1259  # Fix example block format in Distributed Optimizer API doc (#34919)
85c51a8c10  # Fix dist autograd context Example block format (#34921)
4bd3e9b41b  # fix barrier in jit test (#34901)
ff3d205ee5  # [rpc] handle exceptions in ProcessGroupAgent::enqueueRecv (#34413)
b5edf329f8  # [JIT] Make RPC RRef Owner WorkerInfo.name available to TorchScript (#34896)
c4fdba326d  # Support using self as the destination in rpc.remote for builtin operators (#34931)
