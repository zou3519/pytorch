ac103a5d78  # Remove variable wrapping from register_c10_ops (#29207)
c1c8105de0  # Make the warning of using SparseTensor in JIT less noisy
9c02b88791  # Add pickler support for Device (#30131)
d4c25add45  # make sure the counter stays correct in between bailout transitions (#30186)
ea3697db69  # inline to prevent duplicate obj when linking (#30363)
b26401f965  # Dump operator names of a script module (#30467)
d38f9117fd  # Cache compilation of free functions (#30503)
2308a0ec1b  # Improve documentation around builtin functions (#30347)
1707774417  # AddConstant and findConstant for ClassType (#29217)
569ea63f3b  # fix anynonzero op
9a858aba5f  # Moving checks related to options.aliasAnalysis and schema.hasAliasInfo to read callsite (#30671)
118f1c633b  # refactor the way we are handling bailout counts
648bb501a1  # rename shouldAnnotate api (#30543)
3eefc06feb  # add constant prop for immutable types (#30544)
82268bf300  # handle reassignment to inf and nan (#30877)
a03581b927  # add tests that schemas are valid (#30749)
446488960a  # polish up overloads on free functions (#30356)
f48a8901c5  # Add floor_divide function (#30493)
af4040d808  # resubmit polish up overloads on free functions (#31014)
3de8584de8  # Correct definition of nodes that work with Autograd (#30683)
9f3fe78239  # peephole optimize type refinements (#31024)
1f87e823b8  # Make `nn.Transformer` TorchScript compatible (#28561)
44ecc3a70b  # Add tracing support for optional Device and Layout (#30979)
679b20b1e4  # Unify list elements for all list types (#30777)
85107e72b4  # Fix type unification With Specialized Tensor Shapes (#31076)
56de8853da  # Resubmit overload v2 (#31123)
bcb0bb7e0e  # Remove unnecessary ATen/core/EnableNamedTensor.h (#31117)
5c936845cf  # fix torch_train build (#30497)
5ef0d6f854  # Remove subgraphNode kind assert in unmergeSubgraph (#31212)
f30b14dead  # Fix handling of type comments in body (#30590)
10ce1765be  # Introducing ScalarTypeType and LayoutType (#31074)
cc8d6342fc  # make profiling take no_grad flags into account (#31071)
e0ab255a51  # Updates to serialization.md (#31372)
4ec2448580  # Update OVERVIEW.md (#31373)
e5631119f6  # use expect instead of casting in register_c10_ops (#31401)
7e81d72d12  # remove unnecessary arg from create_script_module (#31017)
82d52bc718  # remove remnants of properties hack (#31018)
878b0e35f7  # Simplify recursive script compilation flow. (#31019)
3c8892aa0c  # avoid doing quadratic work in concrete type inference (#31020)
c05538b831  # Move TorchScript language reference to its own page (#31138)
fb30a48b4e  # add unsupported section (#31329)
1f50cfc24d  # Throw a better error for int too big for int64_t
7692494c67  # Fix hex literal parsing (#29935)
ae2487bf4d  # Move TorchScript language reference to its own page (#31138)
503a4e9019  # Cleanup after moving language reference (#31146)
148bcd3ee5  # Add support for builtins as attributes (#31269)
e7d25a3e4d  # add a suggested alternative to _get_trace_graph
e1509cb468  # Add support for `del` (#31273)
fb24f7c4ad  # catch all exceptions in converting default values to ivalues (#31398)
fc3103b116  # fixing a naming issue in creating a residual loop node in a bailout graph (#31400)
28376e826d  # Fix lint
57caeb3fc1  # Fix builtins table (#31492)
457286a383  # fix missing type check in dictionary literal
06dbef663d  # Add support for `del` (#31273)
256db1e61b  # Add fake parsing for torchbind classes in schema type parser
5375ceae80  # run optimizations on pre-profiled graph (#31392)
11854bcd38  # Add test to torch.jit.export_opnames, make the _C function private
68e5172382  # Support optional float parameters (float?, optional<double>). (#31517)
446e9af5b9  # Fix parsing of big float literals (#29940)
46ad80c839  # Fix null pointer dereference on Android for strtod_c (#31582)
363d8be787  # Bypass _TorchScriptTesting_StackString::pop in BC check now (#31586)
dd0f2f0c19  # add float[] str[] constants (#31503)
5fe3604987  # Preserve constant from ConcreteModuleType to ClassType (#29218)
8420f205ee  # Remove refs from ArrayRef arguments (#31845)
2bac76969c  # Fix getConstant (#31012)
6f62c311a1  # Add unsafeRemoveConstant for ClassType (#30787)
78cba90a8c  # Enable constant folding for Reshape (#31054)
112196fdee  # Fix index put (#31552)
3c7db5ccbc  # Don't unconditionally compile runJITCPPTests (#31236)
3a2757c682  # Fix tracing for modules with List[Tensor] as output (#31343)
3c07eb33bb  # Better error for `torch::jit::load`ing a eager file (#31709)
883fb5434a  # Use real argument names for Python functions (#29300)
319cc21108  # Add AliasDb API For Changing Aliasing (#31501)
8ecd3f783d  # check for object equality in constant pooling (#31800)
1f34801460  # More robust mangling (#31978)
c036fbdc5c  # remove .data from torch/jit
61e509b992  # Skip un-runnable tests (#31965)
2a7a39c1af  # (de)serialization of values between C++ and Python (#30108)